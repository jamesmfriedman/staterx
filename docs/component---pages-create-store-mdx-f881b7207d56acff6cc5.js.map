{"version":3,"sources":["webpack:///../pages/create-store.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"0eAMO,IAAMA,EAAe,Q,wMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,eADR,eAGA,wIACA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,gBADZ,gEAIL,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,szBA2BL,iBAAQ,CACN,GAAM,SADR,UAGA,8FACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,2DAIL,iBAAQ,CACN,GAAM,UADR,WAGA,gHACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,4DAIL,iBAAQ,CACN,GAAM,YADR,YAGA,uFACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,0CAIL,iBAAQ,CACN,GAAM,YADR,YAGA,oTACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,uF,sMAWTJ,EAAWK,gBAAiB","file":"component---pages-create-store-mdx-f881b7207d56acff6cc5.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/jamesmfriedman/Sites/staterx/docs-src/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"createstore\"\n    }}>{`createStore`}</h1>\n    <p>{`Creates an observable centralized store with actions and a dispatcher, similar to Redux or other flux patterns.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`createStore({[name: string]: Observable | StateRxObject})\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { createStore, createValue, connectDevTools } from 'staterx';\n\n// You can optionally pass a name to identify your StateRx\n// Object. If not, a name will be generated for you.\nconst myValue = createValue(0, { name: 'myValue' });\nconst anotherValue = createValue('Hello', { name: 'anotherValue' });\n\nconst store = createStore({\n  [myValue.name]: myValue,\n  [anotherValue.name]: anoterValue\n});\n\n// optionally connect redux-dev-tools\nconnectDevTools(store);\n\n// you can subscribe to all store actions\nstore.action$.subscribe(action => console.log(action));\n\n// dispatch actions across ALL branches of your state\nstore.dispatch({ type: 'hello' });\n\n// Subscribe to any changes to global state\n// Logs {myValue: 0, anotherValue: 'Hello'}\nstore.state$.subscribe(state => console.log(state));\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"state\"\n    }}>{`state$`}</h2>\n    <p>{`An observable that emits the entire store's state anytime it changes.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`store.state$.subscribe(state => console.log(state));\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"action\"\n    }}>{`action$`}</h2>\n    <p>{`For Flux implementations, an observable that emits all actions dispatched to the store.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`store.action$.subscribe(state => console.log(state));\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"dispatch\"\n    }}>{`dispatch`}</h2>\n    <p>{`For Flux implementations, a function to dispatch a new action.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`store.dispatch({type: 'myAction'});\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"setstate\"\n    }}>{`setState`}</h2>\n    <p>{`Set a new state for the entire store. This will go through each individal Observable and update its value. Please note, this will only be able to update parts or your store that use StateRx Objects or Behavior Subjects. An attempt to update a plain Observable will trigger a warning.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`store.setState({\n  [myValue.name]: 1,\n  [anotherValue.name]: 'Test'\n});\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}